import PropTypes from 'prop-types';
import React from 'react';
import { Message } from 'roslib';
import { DefaultMessageType, TopicSettings } from './getTopic';
export declare const Subscriber: {
    (props: SubscriberComponentProps): React.JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        topic: PropTypes.Validator<string>;
        messageType: PropTypes.Validator<string>;
        throttleRate: PropTypes.Requireable<number>;
        latch: PropTypes.Requireable<boolean>;
        queueLength: PropTypes.Requireable<number>;
        queueSize: PropTypes.Requireable<number>;
        messageInitialValue: PropTypes.Requireable<object>;
    };
};
export interface SubscriberProps<TMessage = DefaultMessageType> extends TopicSettings {
    customCallback?: (msg: TMessage) => void;
    messageInitialValue?: TMessage;
}
type SubscriberComponentProps<TMessage = DefaultMessageType> = React.PropsWithChildren<SubscriberProps<TMessage>>;
export declare function useMsg(): Message;
export {};
