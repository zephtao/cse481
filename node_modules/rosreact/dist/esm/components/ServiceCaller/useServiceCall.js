import { callService, } from './ServiceCaller';
import { useRos } from '../RosConnection';
import { useCallback } from 'react';
export function useServiceCall(props) {
    var ros = useRos();
    var name = props.name, serviceType = props.serviceType, callback = props.callback, failedCallback = props.failedCallback;
    var callSrv = useCallback(function (request) {
        callService(ros, name, serviceType, request, callback, failedCallback);
    }, [ros, name, serviceType, callback, failedCallback]);
    var callSrvPromise = useCallback(function (request) {
        return new Promise(function (resolve, reject) {
            callService(ros, name, serviceType, request, function (res) { return resolve(res); }, reject);
        });
    }, [ros, name, serviceType]);
    return { callSrv: callSrv, callSrvPromise: callSrvPromise };
}
//# sourceMappingURL=useServiceCall.js.map