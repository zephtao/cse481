import React, { useEffect, Fragment } from "react";
import PropTypes from "prop-types";
import { useRos } from "../RosConnection";
import { Service } from "roslib";
export var ServiceServer = function (props) {
    var name = props.name, serviceType = props.serviceType, callback = props.callback;
    var ros = useRos();
    useEffect(function () {
        var service = new Service({ ros: ros, name: name, serviceType: serviceType });
        service.advertise(wrapServerCallback(callback));
        return function () {
            service.unadvertise();
        };
    }, []);
    return React.createElement(Fragment, null);
};
;
ServiceServer.propTypes = {
    name: PropTypes.string.isRequired,
    serviceType: PropTypes.string.isRequired,
    callback: PropTypes.func.isRequired,
};
export function wrapServerCallback(callback) {
    return function (request, response) {
        callback(request, response);
        return true;
    };
}
//# sourceMappingURL=ServiceServer.js.map