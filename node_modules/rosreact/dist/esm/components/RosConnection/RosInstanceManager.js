import { Ros } from 'roslib';
import { v4 as uuidv4 } from 'uuid';
var RosInstances = {};
/**
 * Creates a ROS instance and stores it by its URL.
 * Does not connect for you.
 *
 * @param url The URL to connect to. Should not be an empty string
 * @param options Ros constructor parameters, without the URL.
 * @return Ros instance
 */
export var getRosObject = function (url, options) {
    if (options === void 0) { options = {}; }
    var rosInstance = new Ros(options);
    rosInstance.uid = uuidv4();
    if (RosInstances[url] === undefined) {
        // cache miss, store
        RosInstances[url] = rosInstance;
    }
    else {
        rosInstance = RosInstances[url];
    }
    return rosInstance;
};
export var finalizeRosConnection = function (ros, url) {
    ros.close();
    if (ros.uid === undefined || ros.uid === '') {
        return;
    }
    // Remove this tracking uid and the instance
    delete RosInstances[url];
};
//# sourceMappingURL=RosInstanceManager.js.map